<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>profanity</title>
    <link>https://profanity-im.github.io/blog/</link>
    <description>Recent content on profanity</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Apr 2020 22:50:18 +0200</lastBuildDate>
    
	<atom:link href="https://profanity-im.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New mailing list</title>
      <link>https://profanity-im.github.io/blog/post/new-mailing-list/</link>
      <pubDate>Sun, 19 Apr 2020 22:50:18 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/new-mailing-list/</guid>
      <description>&lt;p&gt;I would like to announce that thanks to &lt;a href=&#34;https://github.com/toogley&#34;&gt;toogley&lt;/a&gt; we have a new mailing list.
You can register on &lt;a href=&#34;https://lists.notraces.net/mailman/listinfo/profanity&#34;&gt;https://lists.notraces.net/mailman/listinfo/profanity&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The list is hosted by &lt;a href=&#34;https://www.datenkollektiv.net/&#34;&gt;datenkollektiv&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contributing a Patch via GitHub</title>
      <link>https://profanity-im.github.io/blog/post/contributing-a-patch-via-github/</link>
      <pubDate>Wed, 15 Apr 2020 13:50:25 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/contributing-a-patch-via-github/</guid>
      <description>&lt;p&gt;Several people mentioned in our MUC that they have problems contributing code to the Profanity repo on GitHub because &amp;ldquo;forking all the time is cumbersome&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Let me show you an example workflow. Since I don&amp;rsquo;t think it&amp;rsquo;s cumbersome at all.
I assume you have an account on &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; and are logged in.
First thing we do is fork the repo. So go to &lt;a href=&#34;https://github.com/profanity-im/profanity&#34;&gt;https://github.com/profanity-im/profanity&lt;/a&gt; and click on &amp;ldquo;Fork&amp;rdquo;.
Now you should be at your fork, in my case this is: &lt;a href=&#34;https://github.com/jubalh/profanity/&#34;&gt;https://github.com/jubalh/profanity/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s go into our developtment directory: &lt;code&gt;cd dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now you clone our repo: &lt;code&gt;https://github.com/profanity-im/profanity/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Change to the directory and check out a branch: &lt;code&gt;cd profanity; git checkout -b fix/typo-in-readme&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add our own fork: &lt;code&gt;git remote add mine https://github.com/jubalh/profanity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Make a change: &lt;code&gt;$EDITOR README.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Commit your change: &lt;code&gt;git add README.md ; git commit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And push the change to our forked repo: &lt;code&gt;git push mine&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the browser go to &lt;a href=&#34;https://github.com/jubalh/profanity&#34;&gt;https://github.com/jubalh/profanity&lt;/a&gt; again and click on &amp;ldquo;Pull Request&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Write some nice text there.&lt;/p&gt;
&lt;p&gt;A couple of days later you want to contribute something else.&lt;/p&gt;
&lt;p&gt;So we go to our sources: &lt;code&gt;cd dev/profanity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pull the latest changes from master, hopefully including our own changes in case they got merged:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git checkout master; git pull&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And then we do the same like before. We check out a new branch, we do our commits there. We push them.
So this is the same like one wouldn&amp;rsquo;t use GitHub but git in general.
The only thing that is &amp;ldquo;more work&amp;rdquo; is to go to the website and create a pull request.
The &amp;ldquo;forking&amp;rdquo; actually only happens once.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t like browsers, you can use something like &lt;a href=&#34;https://hub.github.com/&#34;&gt;hub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>XML console in Profanity</title>
      <link>https://profanity-im.github.io/blog/post/xml-console-in-profanity/</link>
      <pubDate>Thu, 09 Apr 2020 21:16:34 +0300</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/xml-console-in-profanity/</guid>
      <description>&lt;p&gt;Profanity is an XMPP client that allows you to chat with friends. But one
feature makes it more than just a client. The name is XML console.&lt;/p&gt;
&lt;p&gt;It has been implemented for a long time now, but hasn&amp;rsquo;t found wide spread within
Profanity community. I still believe that the XML console is unpopular because
users haven&amp;rsquo;t chance to find it and to try it out. And Profanity community has
a number of experts who use XMPP in their projects. If you&amp;rsquo;re one of them,
Profanity can make life easier for you.&lt;/p&gt;
&lt;p&gt;XMPP clients implement an XML console mostly for debugging purpose. To see XMPP
stream and analyze issues post factum. But Profanity has gone further and
implemented XML console with ability to send any data. One this small property
turned Profanity into a powerful developer tool. Let&amp;rsquo;s see how to use it:&lt;/p&gt;
&lt;p&gt;To open the XML console, simply run command: &lt;code&gt;/xmlconsole&lt;/code&gt;. It opens a new
window with content of XMPP stream. Profanity starts displaying only new XMPP
stanzas. You won&amp;rsquo;t see the part of XMPP stream before you open the window.
Format of the content is as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;21:24 - SENT:
21:24 - &amp;lt;iq id=&amp;#34;id1&amp;#34; type=&amp;#34;get&amp;#34;&amp;gt;&amp;lt;ping xmlns=&amp;#34;urn:xmpp:ping&amp;#34;/&amp;gt;&amp;lt;/iq&amp;gt;
21:24 -
21:24 - RECV:
21:24 - &amp;lt;iq id=&amp;#34;id1&amp;#34; to=&amp;#34;pasis@jabber.ua/profanity.754a&amp;#34; type=&amp;#34;result&amp;#34;/&amp;gt;
21:24 -

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any text you send in the window is inserted into XMPP stream as is. So, you can
simply type a stanza, press enter and observe server behaviour. Why is it so
cool? Because you don&amp;rsquo;t have to write any code while you learn a XEP or server
behaviour.&lt;/p&gt;
&lt;p&gt;For example, you&amp;rsquo;ve decided to implement roster support with a low-level
library like libstrophe. Instead of debugging with writing code, printing
text to terminal or logs, you can connect to your server with Profanity and
type in the XML console:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;lt;iq type=&amp;#34;get&amp;#34; id=&amp;#34;id2&amp;#34;&amp;gt;&amp;lt;query xmlns=&amp;#34;jabber:iq:roster&amp;#34;/&amp;gt;&amp;lt;/iq&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, you can observe what server replies in practice. In this way, you can
debug process which requires multiple iterations.&lt;/p&gt;
&lt;p&gt;Hint: if you type a stanza without child element, don&amp;rsquo;t forget to close the tag!
Pay attention to the &amp;ldquo;query&amp;rdquo; stanza in the above example - it has &amp;lsquo;/&amp;rsquo; before
closing tag.&lt;/p&gt;
&lt;p&gt;And even you send something wrong, server will close connection and Profanity
will reconnect automatically. So, this is much faster than rewriting your code.&lt;/p&gt;
&lt;p&gt;To demonstrate a different usecase, let&amp;rsquo;s refer to XEP-0363. After requesting
a slot with an IQ stanza, you can upload file using curl command-line tool.
Again, no need to write any code for debugging.&lt;/p&gt;
&lt;p&gt;Hope you will find this feature useful for you!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to run profanity instances within tmux</title>
      <link>https://profanity-im.github.io/blog/post/how-to-run-profanity-instances-within-tmux/</link>
      <pubDate>Tue, 03 Mar 2020 14:49:55 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/how-to-run-profanity-instances-within-tmux/</guid>
      <description>&lt;p&gt;If you have more than one XMPP account, you may run one profanity process per
account. For example &lt;code&gt;profanity -a AccountName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s possible to start a tmux session with one window for each
profanity instance.&lt;/p&gt;
&lt;p&gt;Create a tmux configuration file, e.g. in &lt;code&gt;~/.config/tmux&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/.config/tmux
touch ~/.config/tmux/profanity.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Within the configuration file, you create a tmux session named &lt;code&gt;Profanity&lt;/code&gt;.
Followed by one window per XMPP Account. Each window will run a profanity
followed by &lt;code&gt;-a accountname&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;session-name Profanity
neww -n &amp;quot;Private&amp;quot; profanity -a private 
neww -n &amp;quot;Work&amp;quot; profanity -a work
neww -n &amp;quot;Movim&amp;quot; profanity -a Movim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using bash, you may like to define a alias in &lt;code&gt;~/.bash_aliases&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias profanitymux=&#39;tmux new-session &amp;quot;tmux source-file ~/.config/tmux/profanity.conf&amp;quot;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Done! You can start your profanity instances within a tmux session by running
&lt;code&gt;profanitymux&lt;/code&gt;. tmux will create one window for each profanity instance. You can
switch the
tmux windows with CTRL-B + 1 or CTRL-B + 2,&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Last Message Correction</title>
      <link>https://profanity-im.github.io/blog/post/lmc/</link>
      <pubDate>Fri, 14 Feb 2020 11:34:38 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/lmc/</guid>
      <description>&lt;p&gt;From 10th to 14th February 2020 we had &lt;a href=&#34;https://hackweek.suse.com/19/projects&#34;&gt;Hackweek 19&lt;/a&gt; at SUSE.
Part of that time I used to finally implement the long (since 2016!) &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/805&#34;&gt;sought after&lt;/a&gt; Last Message Correction feature, aka &lt;a href=&#34;https://xmpp.org/extensions/xep-0308.html&#34;&gt;XEP-0308&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See my &lt;a href=&#34;https://hackweek.suse.com/projects/implement-xep-0308-last-message-correction-in-profanity&#34;&gt;Hackweek project&lt;/a&gt; and the corresponding &lt;a href=&#34;https://github.com/profanity-im/profanity/pull/1267&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;To enable incoming and outgoing corrections users need to enable it with &lt;code&gt;/correction on&lt;/code&gt;, see &lt;code&gt;/help correction&lt;/code&gt; for more details.&lt;/p&gt;
&lt;p&gt;Now we write a message to a friend &lt;code&gt;/msg Martin Hey therr!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ouch! Already a typo.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s make this right: &lt;code&gt;/corr&amp;lt;TAB&amp;gt; &amp;lt;TAB&amp;gt;&lt;/code&gt; will autocomplete to &lt;code&gt;/correct Hey therr!&lt;/code&gt; which then can easily be fixed and re-send.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/prof-lmc-wrong.png&#34; alt=&#34;mistake&#34;&gt;
&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/prof-lmc-corrected.png&#34; alt=&#34;corrected&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;details&#34;&gt;Details&lt;/h2&gt;
&lt;p&gt;The feature is only available in the development version of Profanity. In the master branch on git.
So it&amp;rsquo;s not yet ready for release.&lt;/p&gt;
&lt;p&gt;Master branch corresponds always to our development and doesn&amp;rsquo;t guarantee anything. It&amp;rsquo;s where we develop test and experiment.
We write these blogposts from time to time to inform our users and sponsors about what we are currently working on.&lt;/p&gt;
&lt;p&gt;The LMC feature is in there. But for the correct behaviour we need to rewrite the UI code. We could hack a &amp;lsquo;from&amp;rsquo; field in but we want to think more carefully how to implement it nicely.
For this reason in the current state we don&amp;rsquo;t check the &amp;lsquo;from&amp;rsquo; attribute of the sender. Because at the time of drawing so far we don&amp;rsquo;t have this information.&lt;/p&gt;
&lt;p&gt;Since LMC is off by default noone is at harm. But people who choose to enable it need to be aware that in theory it would be possible for other users to send special messages where they could &amp;ldquo;correct&amp;rdquo; a message of someone else. We think the damage and likeliness from this is quite low. And once again, this is only in our development version of Profanity.&lt;/p&gt;
&lt;h2 id=&#34;done&#34;&gt;Done!&lt;/h2&gt;
&lt;p&gt;Today, on 2020-03-09, we were able to finish LMC properly. So if you use master from &lt;a href=&#34;https://github.com/profanity-im/profanity/commit/a23d4e4af7c10f6762577940a12983903bf4428d&#34;&gt;a23d4e4af7c10f6762577940a12983903bf4428d&lt;/a&gt; you are good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Profanity 0.8.0</title>
      <link>https://profanity-im.github.io/blog/post/release-080/</link>
      <pubDate>Mon, 03 Feb 2020 14:46:08 +0100</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/release-080/</guid>
      <description>&lt;p&gt;On 2012-02-02 the first commit to Profanity was done by &lt;a href=&#34;https://github.com/boothj5&#34;&gt;@boothj5&lt;/a&gt;.
So now Profanity is already 8 years old! Happy Birthday!&lt;/p&gt;
&lt;p&gt;As a present we release today the next version: &lt;a href=&#34;https://github.com/profanity-im/profanity/releases/tag/0.8.0&#34;&gt;0.8.0&lt;/a&gt;!
It&amp;rsquo;s released five months after 0.7.0 and has 295 commits since then.&lt;/p&gt;
&lt;p&gt;Also more and more people contribute to Profanity&amp;rsquo;s development. A big thanks to:
&lt;a href=&#34;https://github.com/paulfariello&#34;&gt;@paulfariello&lt;/a&gt;, &lt;a href=&#34;https://github.com/svensp&#34;&gt;@svensp&lt;/a&gt;, &lt;a href=&#34;https://github.com/aaptel&#34;&gt;@aaptel&lt;/a&gt;, &lt;a href=&#34;https://github.com/&#34;&gt;@aszlig&lt;/a&gt;, &lt;a href=&#34;https://github.com/mdosch&#34;&gt;@mdosch&lt;/a&gt;, &lt;a href=&#34;https://github.com/pasis&#34;&gt;@pasis&lt;/a&gt;, &lt;a href=&#34;https://github.com/mzagozen&#34;&gt;@mzagozen&lt;/a&gt;, &lt;a href=&#34;https://github.com/quite&#34;&gt;@quite&lt;/a&gt;, &lt;a href=&#34;https://github.com/weiss&#34;&gt;@weiss&lt;/a&gt;, &lt;a href=&#34;https://github.com/Misaflo&#34;&gt;@Misaflo&lt;/a&gt; and &lt;a href=&#34;https://github.com/&#34;&gt;@jubalh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://profanity-im.github.io/blog/blog/img/profanity-rel-080.jpeg&#34; alt=&#34;Profanity&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;new-features&#34;&gt;New features&lt;/h2&gt;
&lt;p&gt;We got fingerprint autocompletion for the &lt;code&gt;/omemo trust&lt;/code&gt; command.   &lt;br&gt;
We got a gruvbox and solarized theme.&lt;/p&gt;
&lt;h2 id=&#34;muc-name-display&#34;&gt;MUC name display&lt;/h2&gt;
&lt;p&gt;You can now decide whether you want to have the MUCs name or JID displayed in the titlebar and roster:
See &lt;code&gt;/titlebar use [name|jid]&lt;/code&gt; and &lt;code&gt;/roster room use name&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;avatars&#34;&gt;Avatars&lt;/h2&gt;
&lt;p&gt;Profanity is now able to download user avatars via XEP-0084 &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1240&#34;&gt;#1240&lt;/a&gt;.
Use the &lt;code&gt;/avatar &amp;lt;jid&amp;gt;&lt;/code&gt; command. And open it with &lt;code&gt;xdg-open ~/.local/share/profanity/avatars/&amp;lt;jid&amp;gt;.png&lt;/code&gt; from your terminal.&lt;/p&gt;
&lt;h2 id=&#34;trackbar&#34;&gt;Trackbar&lt;/h2&gt;
&lt;p&gt;A trackbar was added so you can easily see where you last left off reading. &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1238&#34;&gt;#1238&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;consistent-color-generation-for-nicks&#34;&gt;Consistent Color Generation for nicks&lt;/h2&gt;
&lt;p&gt;We gained support for XEP-0392 Consistent Color Generation for nicks &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1191&#34;&gt;#1191&lt;/a&gt;.
See &lt;code&gt;/color&lt;/code&gt;, &lt;code&gt;/occupants color&lt;/code&gt;, &lt;code&gt;/roster color&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;save-current-line&#34;&gt;Save current line&lt;/h2&gt;
&lt;p&gt;Add option to store current line in history (like irssi down arrow behaviour) &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/200&#34;&gt;#200&lt;/a&gt;.
Imagine you write a long line of text, only to find out someone else wrote something where you want to reply first.
Now you can press alt+down-arrow to save the current line. Write a new one. Send it. And press arrow-up to get the saved line back from history.&lt;/p&gt;
&lt;h2 id=&#34;highlight-unread-messages&#34;&gt;Highlight unread messages&lt;/h2&gt;
&lt;p&gt;You can now highlight unread messages with a different color in /wins &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/895&#34;&gt;#895&lt;/a&gt;.
New theming option is &lt;code&gt;cmd.wins.unread&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;switch-to-unread-messages&#34;&gt;Switch to unread messages&lt;/h2&gt;
&lt;p&gt;A keyboard shortcut to select the next window with unread messages has been added: alt+a &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1114&#34;&gt;#1114&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;switch-to-windows&#34;&gt;Switch to windows&lt;/h2&gt;
&lt;p&gt;You can now switch to the first 20 open windows with alt + 1234567890qwertyuio instead of only the first 10 &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1114&#34;&gt;#1114&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;reload-command&#34;&gt;Reload command&lt;/h2&gt;
&lt;p&gt;A command to reload your config has been added: &lt;code&gt;/reload&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;alternative-config-file&#34;&gt;Alternative config file&lt;/h2&gt;
&lt;p&gt;A possibility to specify an alternative config file has been added: Use &lt;code&gt;profanity -c ~/path/to/other/config&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;changes&#34;&gt;Changes&lt;/h2&gt;
&lt;h3 id=&#34;preferences&#34;&gt;Preferences&lt;/h3&gt;
&lt;p&gt;Preferences are not immediately saved once you change them. You will need to issue the &lt;code&gt;/save&lt;/code&gt; command from now on. This has the advantage that you can experiment with different settings and themes and only if you are happy with your changes you save them. If not everything will stay as it was.&lt;/p&gt;
&lt;h3 id=&#34;themes&#34;&gt;Themes&lt;/h3&gt;
&lt;p&gt;We changed the theme handling in Profanity.
So far if you loaded a theme with &lt;code&gt;/theme load bios&lt;/code&gt; it loaded new colors but also other settings the theme makes. Like changing the OMEMO char to &lt;code&gt;X&lt;/code&gt;.
If you decided you prefer &lt;code&gt;#&lt;/code&gt; as your indication of OMEMO encrypted messages you set this in your preferences via &lt;code&gt;/omemo char #&lt;/code&gt;. But if you later tried out different themes because you were set up with your current one it might have happened that you lost some settings &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1077&#34;&gt;#1077&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this reason &lt;code&gt;/theme load bios&lt;/code&gt; will now only load the colors of a theme.
We have &lt;code&gt;/theme full-load bios&lt;/code&gt; to load the complete theme.&lt;/p&gt;
&lt;h3 id=&#34;error-message-in-settings-commands&#34;&gt;Error message in settings commands&lt;/h3&gt;
&lt;p&gt;Profanity has functions that display settings of a certain command. Like &lt;code&gt;/logging&lt;/code&gt; displays the settings for group and chat logging.
So you know what value they have before you change them.
So far if you issued a setting command it displayed the information, but also informed you that the command was not valid &lt;code&gt;Invalid usage, see &#39;/help logging&#39; for details.&lt;/code&gt;. This has been fixed. &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1237&#34;&gt;#1237&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;xep-0092&#34;&gt;XEP-0092&lt;/h3&gt;
&lt;p&gt;XEP-0092 Software Version, sends now the name of your operating system too.
You can switch this off with &lt;code&gt;/os off&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;standardize-comamnds&#34;&gt;Standardize comamnds&lt;/h3&gt;
&lt;p&gt;In an attempt to standardize commands some functionality got reorganized in different/new commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/tls show on|of&lt;/code&gt; -&amp;gt; &lt;code&gt;/titlebar show|hide tls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/encwarn on|off&lt;/code&gt; -&amp;gt; &lt;code&gt;/titlebar show|hide encwarn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/titlebar show|hide resource&lt;/code&gt; additionally to &lt;code&gt;/resource titlebar on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/titlebar show|hide presence&lt;/code&gt; additionally to &lt;code&gt;/presence titlebar on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/invite &amp;lt;contact&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/invite send &amp;lt;contact&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/invites&lt;/code&gt; -&amp;gt; &lt;code&gt;/invite list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/decline&lt;/code&gt; -&amp;gt; &lt;code&gt;/invite decline&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/online&lt;/code&gt;, &lt;code&gt;/away&lt;/code&gt;, &lt;code&gt;/dnd&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, &lt;code&gt;/xa&lt;/code&gt; -&amp;gt; &lt;code&gt;/status set online&lt;/code&gt; etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/status&lt;/code&gt; -&amp;gt; &lt;code&gt;/status get&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/chlog on&lt;/code&gt; -&amp;gt; &lt;code&gt;/logging chat on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/grlog on&lt;/code&gt; -&amp;gt; &lt;code&gt;/logging group on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/group&lt;/code&gt; -&amp;gt; &lt;code&gt;/roster group&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1116&#34;&gt;#1116&lt;/a&gt;, &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1224&#34;&gt;#1224&lt;/a&gt;, &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1229&#34;&gt;#1229&lt;/a&gt; if you want to know more.&lt;/p&gt;
&lt;h2 id=&#34;muc-pm-messages&#34;&gt;MUC PM Messages&lt;/h2&gt;
&lt;p&gt;Log MUC PM messages &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1184&#34;&gt;#1184&lt;/a&gt;, &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1214&#34;&gt;#1214&lt;/a&gt;, so far this was actually not done.&lt;/p&gt;
&lt;h2 id=&#34;muc-messages&#34;&gt;MUC Messages&lt;/h2&gt;
&lt;p&gt;We now use XEP-0359: Unique and Stable Stanza IDs to detect if MUC messages come from us or not &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1207&#34;&gt;#1207&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;clear-command&#34;&gt;Clear command&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;/clear&lt;/code&gt; autocompletion and improve its documentation &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/855&#34;&gt;#855&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;subscribed-message&#34;&gt;Subscribed message&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t print subscribed message if contact is already in roster &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1166&#34;&gt;#1166&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;fixes&#34;&gt;Fixes&lt;/h2&gt;
&lt;h3 id=&#34;timestamps&#34;&gt;Timestamps&lt;/h3&gt;
&lt;p&gt;So far we just displayed the timestamp of the first &lt;!-- raw HTML omitted --&gt; tag we found. Now we fixed this to actually check for the oldest timestamp. Meaning that the time a message was send should now be when it was first delayed not the last or any other delay &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1254&#34;&gt;#1254&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;omemo&#34;&gt;OMEMO&lt;/h3&gt;
&lt;p&gt;Several OMEMO related bugs were fixed by @paulfarielle, @svensp, @aszlig.&lt;/p&gt;
&lt;h3 id=&#34;occupants-and-roster-chars&#34;&gt;Occupants and roster chars&lt;/h3&gt;
&lt;p&gt;Occupants and roster chars have never actually been saved!
Seems noone discovered this for years until recently &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1244&#34;&gt;#1244&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;status-messages&#34;&gt;Status messages&lt;/h3&gt;
&lt;p&gt;Allow setting of status message (which actually never worked before) &lt;a href=&#34;https://github.com/profanity-im/profanity/commit/b846c4970bb8054ca2bacb8cebdbe4d9302f4cb6&#34;&gt;b846c49&lt;/a&gt;.
&lt;code&gt;/status set online &amp;quot;This is my text&amp;quot;&lt;/code&gt;
&lt;code&gt;/status set away bye&lt;/code&gt;
&lt;code&gt;/status set away&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;date&#34;&gt;Date&lt;/h3&gt;
&lt;p&gt;If you configure Profanity to load the last few lines from the history in a chat window. It always displayed a date of &lt;code&gt;01-01-00&lt;/code&gt; as this was hardcoded.
Now it acually uses the right one. Seems this has gone unnoticed for years too &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/922&#34;&gt;#922&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;memory-leaks&#34;&gt;Memory leaks&lt;/h3&gt;
&lt;p&gt;We fixed many memory leaks. Profanity should be much nicer now if you plan to never quit it.&lt;/p&gt;
&lt;h3 id=&#34;log-message-carbons&#34;&gt;Log message carbons&lt;/h3&gt;
&lt;p&gt;Carbon copied messages now get logged too &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1181&#34;&gt;#1181&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get a backtrace</title>
      <link>https://profanity-im.github.io/blog/post/how-to-get-a-backtrace/</link>
      <pubDate>Sun, 26 Jan 2020 17:16:59 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/how-to-get-a-backtrace/</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re running profanity master it may occur that profanity crashes
with SIGSEGV or SIGABRT when new features are added. If this happens it
is helpful to provide a backtrace for the developers to find and fix the
bug.&lt;/p&gt;
&lt;p&gt;I will explain one possibility how to get a backtrace of profanity
(or any other TUI application)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;
&lt;p&gt;The following requirements must be installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/gdb/&#34;&gt;gdb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gdbserver&lt;/li&gt;
&lt;li&gt;debug symbols (depending on your distribution they might already be included)
&lt;ul&gt;
&lt;li&gt;e.g. profanity-dbgsym (for debian)&lt;/li&gt;
&lt;li&gt;e.g. libstrophe0-dbgsym (for debian)&lt;/li&gt;
&lt;li&gt;e.g. libexpat1-dbgsym (for debian)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;run-profanity&#34;&gt;Run profanity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open terminal #1
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;gdbserver localhost:1234 /usr/bin/profanity&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Open terminal #2
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;gdb /usr/bin/profanity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;target remote localhost:1234&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter &lt;code&gt;c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Profanity opens in terminal #1
&lt;ul&gt;
&lt;li&gt;Reproduce crash&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;gdb&lt;/em&gt; command line opens in terminal #2
&lt;ul&gt;
&lt;li&gt;Enter &lt;code&gt;bt&lt;/code&gt; or &lt;code&gt;bt full&lt;/code&gt; &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create an issue in the &lt;a href=&#34;https://github.com/profanity-im/profanity/issues&#34;&gt;bugtracker&lt;/a&gt; and include the output of the previous step (see &lt;a href=&#34;https://github.com/profanity-im/profanity/issues/1159&#34;&gt;this example&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;This explanation was first published &lt;a href=&#34;https://blog.mdosch.de/2019/09/20/how-to-debug-a-tui-application/&#34;&gt;on my personal blog&lt;/a&gt;. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;bt full&lt;/code&gt; gives a much more detailled output but in most cases &lt;code&gt;bt&lt;/code&gt; is enough for the dev to know what&amp;rsquo;s going on. &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>https://profanity-im.github.io/blog/post/intro/</link>
      <pubDate>Fri, 03 Jan 2020 17:16:59 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/post/intro/</guid>
      <description>&lt;p&gt;Hello folks!
Now with the 0.8.0 release around the corner we would like to start a development blog.
We hope to give you some insights here about ongoing work, our problems, goals and where you could contribute.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://profanity-im.github.io/blog/about/</link>
      <pubDate>Tue, 30 Jul 2019 17:05:33 +0200</pubDate>
      
      <guid>https://profanity-im.github.io/blog/about/</guid>
      <description>&lt;p&gt;Development blog for Profanity.&lt;/p&gt;
&lt;p&gt;Contribute by creating pull requests to &lt;a href=&#34;https://github.com/profanity-im/blog&#34;&gt;https://github.com/profanity-im/blog&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
